// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          String     @id @default(cuid())
  clerkUserId String     @unique
  email       String     @unique
  name        String
  imageUrl    String?
  role        String?
  articles    Articles[]
  comments    Comment[]
}

model Admin {
  id        Int      @id @default(autoincrement())
  name      String   @default("99Notes")
  image     String?  @default("")
  email     String   @unique
  password  String
  secretKey String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  articles Articles[] @relation("AdminToArticle")
}

model Articles {
  id            String    @id @default(cuid())
  title         String
  content       String
  category      String
  featuredImage String
  slug          String
  metadata      String
  author        User      @relation(fields: [authorId], references: [id])
  authorId      String
  comments      Comment[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Comment {
  id        String   @id @default(cuid())
  body      String
  articleId String
  article   Articles @relation(fields: [articleId], references: [id])
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}

model Tags {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Many - Many relation between Tags and Pages
  articles Articles[] @relation("TagToArticle")

  @@index([name])
}